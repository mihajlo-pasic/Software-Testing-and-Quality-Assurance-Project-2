{
	"info": {
		"_postman_id": "969cb579-5e4b-4f17-919c-539f33981395",
		"name": "Students",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34435446"
	},
	"item": [
		{
			"name": "GET ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "INSERT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Insert test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.be.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql('marko');\r",
							"    pm.expect(responseJson.studentName).to.be.a('string');\r",
							"    pm.expect(responseJson.studentEmail).to.eql('marko@gmail.com');\r",
							"    pm.expect(responseJson.studentEmail).to.be.a('string');\r",
							"    pm.expect(responseJson.studentBranch).to.eql('BCA');\r",
							"    pm.expect(responseJson.studentBranch).to.be.a('string');\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentName\":\"marko\",\r\n    \"studentEmail\":\"marko@gmail.com\",\r\n    \"studentBranch\":\"BCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.be.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql('marko');\r",
							"    pm.expect(responseJson.studentName).to.be.a('string');\r",
							"    pm.expect(responseJson.studentEmail).to.eql('marko@gmail.com');\r",
							"    pm.expect(responseJson.studentEmail).to.be.a('string');\r",
							"    pm.expect(responseJson.studentBranch).to.eql('BCA');\r",
							"    pm.expect(responseJson.studentBranch).to.be.a('string');\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.be.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql('Marko');\r",
							"    pm.expect(responseJson.studentName).to.be.a('string');\r",
							"    pm.expect(responseJson.studentEmail).to.eql('marko1@gmail.com');\r",
							"    pm.expect(responseJson.studentEmail).to.be.a('string');\r",
							"    pm.expect(responseJson.studentBranch).to.eql('MCA');\r",
							"    pm.expect(responseJson.studentBranch).to.be.a('string');\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentName\":\"Marko\",\r\n    \"studentEmail\":\"marko1@gmail.com\",\r\n    \"studentBranch\":\"MCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.be.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql('Marko');\r",
							"    pm.expect(responseJson.studentName).to.be.a('string');\r",
							"    pm.expect(responseJson.studentEmail).to.eql('marko1@gmail.com');\r",
							"    pm.expect(responseJson.studentEmail).to.be.a('string');\r",
							"    pm.expect(responseJson.studentBranch).to.eql('MCA');\r",
							"    pm.expect(responseJson.studentBranch).to.be.a('string');\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get after delete test\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE NON-EXISTENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update non-existent student test\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentName\":\"Marko\",\r\n    \"studentEmail\":\"marko1@gmail.com\",\r\n    \"studentBranch\":\"MCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE NON-EXISTENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete without id test\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "INSERT 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentName\":\"marko\",\r\n    \"studentEmail\":\"marko@gmail.com\",\r\n    \"studentBranch\":\"BCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "INSERT 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentName\":\"jelena\",\r\n    \"studentEmail\":\"jelena@gmail.com\",\r\n    \"studentBranch\":\"MCA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ALL AFTER ADDED TWO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student"
					]
				}
			},
			"response": []
		}
	]
}